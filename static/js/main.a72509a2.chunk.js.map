{"version":3,"sources":["components/Card/Card.component.jsx","components/CardList/CardList.component.jsx","components/SearchBox/SearchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","cars","id","alt","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filterdNames","filter","car","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAgBeA,EAbF,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAG,+BAA0BF,EAAMG,KAAKC,GAArC,0BACHC,IAAI,kBAER,6BAAKL,EAAMG,KAAKG,OAChB,4BAAIN,EAAMG,KAAKI,YCGZC,G,MAVE,SAACR,GACd,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMG,KAAKM,KAAI,SAACN,GAAD,OACZ,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,WCIjBM,G,MATG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACd,uBACIX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCHG,G,wDAnCX,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTb,KAAM,GACNc,YAAa,IALP,E,qDASd,WAAqB,IAAD,OAChBC,MAAM,8CACDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEpB,KAAMmB,S,oBAG/C,WAAU,IAAD,SACyBE,KAAKR,MAA3Bb,EADH,EACGA,KAAMc,EADT,EACSA,YACRQ,EAAetB,EAAKuB,QAAO,SAACC,GAAD,OAC7BA,EAAIrB,KAAKsB,cAAcC,SAASZ,EAAYW,kBAEhD,OACI,sBAAK3B,UAAU,MAAf,UACI,oBAAIA,UAAU,OAAd,6BACA,cAAC,EAAD,CACIU,YAAY,eACZC,aAAc,SAACkB,GAAD,OACV,EAAKP,SAAS,CAAEN,YAAaa,EAAEC,OAAOC,WAG9C,cAAC,EAAD,CAAU7B,KAAMsB,W,GA9BdQ,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a72509a2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.style.css\";\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img\r\n                src={`https://robohash.org/${props.cars.id}?set=set2&size=180x180`}\r\n                alt=\"Unique Images\"\r\n            />\r\n            <h1>{props.cars.name}</h1>\r\n            <p>{props.cars.email}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../Card/Card.component\";\r\nimport \"./CardList.style.css\";\r\n\r\nconst CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.cars.map((cars) => (\r\n                <Card key={cars.id} cars={cars} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./SearchBox.style.css\";\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className=\"search\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n);\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\nimport CardList from \"./components/CardList/CardList.component\";\nimport SearchBox from \"./components/SearchBox/SearchBox.component\";\nimport \"./App.css\";\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            cars: [],\n            searchField: \"\",\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then((response) => response.json())\n            .then((users) => this.setState({ cars: users }));\n    }\n\n    render() {\n        const { cars, searchField } = this.state;\n        const filterdNames = cars.filter((car) =>\n            car.name.toLowerCase().includes(searchField.toLowerCase())\n        );\n        return (\n            <div className=\"App\">\n                <h1 className=\"head\">Monster Roledex</h1>\n                <SearchBox\n                    placeholder=\"Search Users\"\n                    handleChange={(e) =>\n                        this.setState({ searchField: e.target.value })\n                    }\n                />\n                <CardList cars={filterdNames} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}